<!DOCTYPE html>
<html>
<head>
  <title>Snake - Andrew Cleary</title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<header>
  <h1>Andrew's Snake Game</h1>
</header>
<body>
  <div class = "score">
    <h2 id="score">Score: 0</h2>
  </div>
  <div class="container">
      <div class="game">
          <canvas id="gameCanvas" width="300" height="300" style="border:1px dashed #000000;"></canvas>
          <script>
              /* CONSTANTS */
              const canvasBorderColour = 'black';
              const canvasBackgroundColour = "white";
              const snakeColour = 'green';
              const snakeBorderColour = 'darkgreen';
            
              /*ACCEPT KEYBOARD ARROW KEYS AS EVENT*/
              document.onkeydown = changeDirection;
              
              let snake = {
                  Coords: [
                          {x: 200, y: 200},
                          {x: 190, y: 200},
                          {x: 180, y: 200},
                          {x: 170, y: 200},
                          {x: 160, y: 200},
                          {x: 150, y: 200},
                          {x: 140, y: 200},
                          {x: 130, y: 200},
                          {x: 120, y: 200},
                          ],
                  dx: 10,
                  dy: 0
              };

          
              let foodX;
              let foodY;
              let score = 0;
              let leaders = <%- JSON.stringify(leaderboard) %>;
          
              
              // Get the canvas element
              let gameCanvas = document.getElementById("gameCanvas");
              let ctx = gameCanvas.getContext("2d");

              ctx.fillStyle = snakeColour;
              ctx.strokestyle = snakeBorderColour;
              
              createFood();
              
              //REPEAT MAIN EVERY 75 MILLISECONDS
              setInterval(main, 75);
              
              function main () {
                  clear();
                  drawSnake();
                  drawFood();
                  advanceSnake();
                  didEndGame();
              }
          
          
              function clear () {
                  ctx.fillStyle = canvasBackgroundColour;
                  ctx.strokestyle = canvasBorderColour;
                  
                  ctx.fillRect(0, 0, gameCanvas.width, gameCanvas.height);
                  ctx.strokeRect(0, 0, gameCanvas.width, gameCanvas.height);
              }
          
              
              function advanceSnake() {
                  const w = gameCanvas.width;
                  const h = gameCanvas.height;
                  const xNew = snake.Coords[0].x+snake.dx;
                  const yNew = snake.Coords[0].y+snake.dy;
                  const head = {x: (xNew + w)%w, y: (yNew + h)%h }
                  snake.Coords.unshift(head);
                  
                  const didEatFood = snake.Coords[0].x === foodX && snake.Coords[0].y === foodY;
                  if (didEatFood) {
                      createFood();
                      score+=10;
                      document.getElementById("score").innerHTML = "Score: " + score;
                      document.addLeader.score.value = score;
                  } else {
                      snake.Coords.pop();
                  }
              }

              function drawSnakePart(snakePart) {
                  // Draw a "filled" rectangle to represent the snake part at the coordinates
                  // the part is located
                  
                  ctx.fillStyle = snakeColour;
                  ctx.strokestyle = snakeBorderColour;
                  
                  ctx.fillRect(snakePart.x, snakePart.y, 10, 10);
                  // Draw a border around the snake part
                  ctx.strokeRect(snakePart.x, snakePart.y, 10, 10);
              }

              function drawSnake() {
                  snake.Coords.forEach(drawSnakePart);
              }
          
              function changeDirection(event) {
                  event = event || window.event
                  event.preventDefault();     //THIS PREVENTS WINDOW FROM SCROLLING WHEN ARROW KEYS PRESSED
                  const left = 37;
                  const right = 39;
                  const up = 38;
                  const down = 40;
                  
                  const keyPressed = event.keyCode;
                  const goingUp = snake.dy === -10;
                  const goingDown = snake.dy === 10;
                  const goingRight = snake.dx === 10;
                  const goingLeft = snake.dx === -10;
                  
                  if (keyPressed === left && !goingRight) {
                      snake.dx = -10;
                      snake.dy = 0;
                  }  if (keyPressed === up && !goingDown) {
                      snake.dx = 0;
                      snake.dy = -10;
                  }  if (keyPressed === right && !goingLeft) {
                      snake.dx = 10;
                      snake.dy = 0;
                  }  if (keyPressed === down && !goingUp) {
                      snake.dx = 0;
                      snake.dy = 10;
                }
              }
          
              function random() { //Generates a random multiple of 10
                  return Math.floor(Math.random() * gameCanvas.width * 0.1)*10;
              }
                                  
              function createFood() {
                  foodX = random();
                  foodY = random();
                  snake.Coords.forEach( function isFoodOnSnake(part) {  //checks that the food doesn't overlap with snake. Repeats until it does.
                      const foodIsOnSnake = part.x == foodX && part.y == foodY
                  if (foodIsOnSnake)
                      createFood();
                  });
              }
              
              function drawFood() {
                  ctx.fillStyle = 'red';
                  ctx.strokestyle = 'darkred';
                  ctx.fillRect(foodX, foodY, 10, 10);
                  ctx.strokeRect(foodX, foodY, 10, 10);
              }
          
              function didEndGame() {
                  for (let i = 4; i < snake.Coords.length; i++) {
                      if (snake.Coords[i].x === snake.Coords[0].x && snake.Coords[i].y === snake.Coords[0].y) {
                          setTimeout(endGame,25);
                      }
                  }
              }
          
              function endGame() {
                  if (score > leaders[9].score) {
                      let placing = 9;
                      for (let j = 0; j < 9; j++) {
                          if (score > leaders[j].score) {
                              placing = j;
                              break;
                          }
                      }
                      endGameTop10(placing);
                  } else {
                      endGameBad();
                  }
                  
                  snake = {
                      Coords: [
                              {x: 200, y: 200},
                              {x: 190, y: 200},
                              {x: 180, y: 200},
                              {x: 170, y: 200},
                              {x: 160, y: 200},
                              {x: 150, y: 200},
                              {x: 140, y: 200},
                              {x: 130, y: 200},
                              {x: 120, y: 200},
                              ],
                      dx: 10,
                      dy: 0
                  };
                  score = 0;
                  document.getElementById("score").innerHTML = "Score: " + score;
                  
              }
          
              function endGameTop10(placing) {
                  
                  let name = prompt("Top 10 Result!\nScore: "+score+". Enter Your Name Please");
                  
                  if (name) {} else {name = "Anonymous"};
                  
                  document.addLeader.name.value = name;
                  document.forms["addLeader"].submit();
                  
              }
          
              function endGameBad() {
                  alert("Game Over!\nScore: "+score+". Click Close to restart");
              }
              
          </script>
      </div>
      
      <div class="leaderboard">
          <h2>Leaderboard</h2>
          <ol>
            <%
              var list = '';
              for (i = 0; i < leaderboard.length; i++) {
                list += '<li>' + leaderboard[i].name + '    :   ' + leaderboard[i].score + '</li>';
              }
            %>
            <%- list %>
          </ol>
      </div>
  </div>
  
  <form id="addLeader" name="addLeader" method="post" action="/addLeader" style="display:none">
    <input id="inputName" type="text" placeholder="name" name="name" />
    <input id="inputScore" type="hidden" placeholder="score" name="score" />
  </form>
  
</body>
</html>


